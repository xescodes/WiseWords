// 'use server';
/**
 * @fileOverview Generates a wise saying based on a user-provided topic, attributed to a wise owl.
 *
 * - generateWiseSaying - A function that generates a wise saying.
 * - GenerateWiseSayingInput - The input type for the generateWiseSaying function.
 * - GenerateWiseSayingOutput - The return type for the generateWiseSaying function.
 */

'use server';

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GenerateWiseSayingInputSchema = z.object({
  topic: z.string().describe('The topic for which to generate a wise saying.'),
});
export type GenerateWiseSayingInput = z.infer<typeof GenerateWiseSayingInputSchema>;

const GenerateWiseSayingOutputSchema = z.object({
  wiseSaying: z.string().describe('The wise saying generated by the AI.'),
});
export type GenerateWiseSayingOutput = z.infer<typeof GenerateWiseSayingOutputSchema>;

export async function generateWiseSaying(input: GenerateWiseSayingInput): Promise<GenerateWiseSayingOutput> {
  return generateWiseSayingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateWiseSayingPrompt',
  input: {
    schema: z.object({
      topic: z.string().describe('The topic for which to generate a wise saying.'),
    }),
  },
  output: {
    schema: z.object({
      wiseSaying: z.string().describe('The wise saying generated by the AI.'),
    }),
  },
  prompt: `You are a wise owl, known for your profound and insightful sayings. A user has asked for a wise saying about the following topic: {{{topic}}}. Generate a short, wise saying attributed to the owl.

Wise Saying:
`,
});

const generateWiseSayingFlow = ai.defineFlow<
  typeof GenerateWiseSayingInputSchema,
  typeof GenerateWiseSayingOutputSchema
>(
  {
    name: 'generateWiseSayingFlow',
    inputSchema: GenerateWiseSayingInputSchema,
    outputSchema: GenerateWiseSayingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
