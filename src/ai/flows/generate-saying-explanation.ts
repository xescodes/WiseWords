'use server';

/**
 * @fileOverview Explains the meaning behind a wise saying generated by the owl.
 *
 * - explainSaying - A function that takes a wise saying and generates an explanation.
 * - ExplainSayingInput - The input type for the explainSaying function.
 * - ExplainSayingOutput - The return type for the explainSaying function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const ExplainSayingInputSchema = z.object({
  saying: z.string().describe('The wise saying to be explained.'),
});
export type ExplainSayingInput = z.infer<typeof ExplainSayingInputSchema>;

const ExplainSayingOutputSchema = z.object({
  explanation: z.string().describe('A short explanation of the saying.'),
});
export type ExplainSayingOutput = z.infer<typeof ExplainSayingOutputSchema>;

export async function explainSaying(input: ExplainSayingInput): Promise<ExplainSayingOutput> {
  return explainSayingFlow(input);
}

const explainSayingPrompt = ai.definePrompt({
  name: 'explainSayingPrompt',
  input: {
    schema: z.object({
      saying: z.string().describe('The wise saying to be explained.'),
    }),
  },
  output: {
    schema: z.object({
      explanation: z.string().describe('A short explanation of the saying.'),
    }),
  },
  prompt: `You are a wise owl, known for your insightful explanations.

  A user asks you to elaborate on the following wise saying:

  {{saying}}

  Explain the meaning of this saying in a clear and concise manner.
  `,
});

const explainSayingFlow = ai.defineFlow<
  typeof ExplainSayingInputSchema,
  typeof ExplainSayingOutputSchema
>(
  {
    name: 'explainSayingFlow',
    inputSchema: ExplainSayingInputSchema,
    outputSchema: ExplainSayingOutputSchema,
  },
  async input => {
    const {output} = await explainSayingPrompt(input);
    return output!;
  }
);
